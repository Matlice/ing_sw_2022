@startuml

skinparam ClassAttributeIconSize 0
'skinparam groupInheritance 2
skinparam linetype ortho
hide empty members

package controller #FFFFFF {
    class Controller
    class AuthImpl <<static>>
}

package data #FFFFFF {
    abstract class User {
        + USERNAME: String <<final>>
        + User(username: String) <<constructor>>
    }

    class Configurator {
    
    }

    class Hierarchy{

    }

    class Category <<extends HashMap<String, TypeDefinition>>> {
        + Category(categoryName: String) <<constructor>>
        + addField(fieldName: String, typeDef: TypeDefinition): Category
    }

    class TypeDefinition<T   > {
        + FRIENDLY_NAME: String
        + TYPE: T
        + REQUIRED: bool
        + {static} fromString<Q>(): TypeDefinition<Q>
    }

    class LeafCategory{
    }

    class NodeCategory{
    }

    package db #FFFFFF {
        class UserFactory
    }

}


class Configurator extends User
class LeafCategory extends Category
class NodeCategory extends Category

LeafCategory -[hidden]-> NodeCategory
Controller "1" o--> "1..n" Hierarchy
Hierarchy "1" -- "1" Category: has root >
NodeCategory "1" o-right-> "2..n" Category
Controller +--> AuthImpl
AuthImpl "1" --> "1" User
Category -up-> TypeDefinition: uses >
UserFactory -[hidden]-> Hierarchy


Controller ..> UserFactory: uses >
UserFactory ..> User: creates >

@enduml