@startuml

skinparam ClassAttributeIconSize 0
'skinparam groupInheritance 2
skinparam linetype ortho
hide empty members

package model #FFFFFF {
    class Model <<singleton>> {
        + createConfigurator(auth: Authentication, username: String)
        + createHierarchy(auth: Authentication, root: Category)
    }

    interface Authentication {
        + getUser(): User
        + getLoginTime(): int
        + getExpirationTime(): int
        + isExpired(): bool
    }

    'add nota per classe innestata
    class AuthImpl <<static>> {
        - AuthImpl() <<constructor>>
    }

    note right of AuthImpl : The class has private constructor\nin order to be instantiated by the\Model class only


    class Settings {
        + TODO: String
    }
}


package data #FFFFFF {
    abstract class User {
        + USERNAME: String <<final>>
        + User(username: String) <<constructor>>
    }

    class Configurator {
    
    }

    class Hierarchy{

    }

    class Category <<extends HashMap<String, TypeDefinition>>> {
        + Category(categoryName: String) <<constructor>>
        + addField(fieldName: String, typeDef: TypeDefinition): Category
    }

    class TypeDefinition<T   > {
        + FRIENDLY_NAME: String
        + TYPE: T
        + REQUIRED: bool
        + {static} fromString<Q>(): TypeDefinition<Q>
    }

    class LeafCategory{
    }

    class NodeCategory{
    }

    package db #FFFFFF {
        class UserDB {
            - username
            - password_hash
            - password_salt
            - user_type
            - full_name
        }

        class UserDBDao

        class UserFactory
    }

}


class Configurator extends User
class LeafCategory extends Category
class NodeCategory extends Category
class AuthImpl implements Authentication

LeafCategory -[hidden]-> NodeCategory
Model "1" o--> "1..n" Hierarchy
Hierarchy "1" -- "1" Category: has root >
NodeCategory "1" o-right-> "2..n" Category
Model +--> AuthImpl
AuthImpl "1" --> "1" User
Category -up-> TypeDefinition: uses >

Model ..> UserFactory: uses >
UserFactory ..> User: creates >
UserFactory ..> UserDBDao: uses >
UserDBDao ..> UserDB: selects\nfrom database >

@enduml